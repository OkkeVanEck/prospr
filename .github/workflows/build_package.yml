name: Build Package

on: [push, pull_request]

jobs:
  syntax_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build_wheels:
    needs: syntax_check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Set up Python
        uses: actions/setup-python@v2

#      - name: Build wheels
#        uses: joerick/cibuildwheel@v1.10.0
#        env:
#          CIBW_SKIP: cp27-* cp35-*
#          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"

      - name: Build wheels for Ubuntu & MacOS
        if: runner.os != 'Windows'
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_SKIP: cp27-* cp35-*
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"

      - name: Build wheels for Windows
        if: runner.os == 'Windows'
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_SKIP: cp27-* cp35-*
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

#    test:
#        needs: build_wheels
#        runs-on: ${{ matrix.os }}
#        strategy:
#            matrix:
#                os: [ubuntu-latest, windows-latest, macos-latest]
#                python-version: [3.6]
#        steps:
#            - uses: actions/checkout@v2
#
#            -   name: Set up Python ${{ matrix.python-version }}
#                    uses: actions/setup-python@v2
#                    with:
#                        python-version: ${{ matrix.python-version }}
#
#            -   name: Install dependencies
#                    run: |
#                        python -m pip install --upgrade pip
#                        python -m pip install pytest
#                        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#
#            - name: Test with pytest
#              run: |
#                  pytest

#    deploy:
#        needs: [syntax_check, build_wheels, test]
#        runs-on: ubuntu-latest
