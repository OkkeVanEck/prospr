name: Build and deploy package

on: [push, pull_request]

jobs:
  syntax_check:
    name: Check for syntax errors.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build_wheels:
    name: Build wheels
    needs: syntax_check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_SKIP: cp27-* cp35-* *-win32
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: syntax_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: python -m pip install twine build

      - name: Build SDist
        run: python -m build -s

      - name: Check metadata
        run: twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

#  deploy:
#    needs: [syntax_check, build_wheels, build_sdist, test]
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_password }}
